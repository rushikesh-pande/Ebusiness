package com.ebusiness.itemservice.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RestControllerAdvice;

import com.ebusiness.itemservice.domain.Item;
import com.ebusiness.itemservice.service.ItemService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@RequestMapping("/items")
@RestControllerAdvice
@RestController
@Api(value="onlinestore", description="Operations pertaining to items in Online Store")

public class ItemServiceController {
	
	@Autowired
	ItemService  itemService;
	
	@ApiOperation(value = "View a list of available products",response = Iterable.class)
	@ApiResponses(value = {
	        @ApiResponse(code = 200, message = "Successfully retrieved list"),
	        @ApiResponse(code = 401, message = "You are not authorized to view the resource"),
	        @ApiResponse(code = 403, message = "Accessing the resource you were trying to reach is forbidden"),
	        @ApiResponse(code = 404, message = "The resource you were trying to reach is not found")
	})
    
	
	@ResponseStatus(HttpStatus.OK)
	//@GetMapping("/")
	@RequestMapping(value = "/", method= RequestMethod.GET, produces = "application/json")
	public List<Item> all() {
		return itemService.getAllItems();
	}
	
	@ResponseStatus(HttpStatus.OK)
	//@GetMapping("/{itemName}")
	@RequestMapping(value = "/show/{itemName}", method= RequestMethod.GET, produces = "application/json")
	public Item get(@PathVariable String itemName) {
		return itemService.getItemDetails(itemName);
	}
	
	@ResponseStatus(HttpStatus.OK)
	@PutMapping("/{itemName}")
	public Item put(@PathVariable String itemName,@RequestBody Item item) {
		item.setName(itemName);
		return itemService.save(item);
	}
	
	@PostMapping("/")
	@ResponseStatus(HttpStatus.CREATED)
	public Item add(@RequestBody Item item) {
		return itemService.save(item);
	}
}
